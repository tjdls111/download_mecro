import pyautogui as pag
import keyboard
from time import sleep
from PIL import ImageGrab


def fast_download():
    # 이미지 다운로드를 찾아서 클릭
    y_start = 500  # 체크 시작 위치(y좌표)
    y_end = 921  # 얼만큼 체크할지

    red, green, blue = 62, 64, 74  # '이미지 다운로드'버튼의 색깔
    red1, green1, blue1 = 0, 128, 128

    screen = ImageGrab.grab()

    for y in range(y_end, y_start, -1):
        a, b, c = screen.getpixel((1100, y))
        if (a, b, c) == (red1, green1, blue1):  # 전체 다운로드가 있는 경우(이미지 복수일 때)
            pag.click(1100, y)
            # 이미지 다운로드 팝업창에서 클릭하는 과정
            screen2 = ImageGrab.grab()
            for m in range(810, 933):
                a1, b1, c1 = screen2.getpixel((777, m))
                if (a1, b1, c1) == (0, 128, 128):
                    pag.click(777, m - 568)
                    pag.click(777, m - 499)
                    pag.click(777, m + 13)
                    sleep(0.5)
                    pag.click(1032, m + 13)
                    return 0
        elif (a, b, c) == (red, green, blue): #전체 이미지가 단수일 때
            pag.click(1100, y)
            # 이미지 다운로드 팝업창에서 클릭하는 과정
            screen2 = ImageGrab.grab()
            for m in range(810, 933):
                a1, b1, c1 = screen2.getpixel((777, m))
                if (a1, b1, c1) == (0, 128, 128):
                    pag.click(777, m - 578)
                    pag.click(777, m - 480)
                    pag.click(777, m + 13)
                    sleep(0.5)
                    pag.click(1032, m + 13)
                    return 0

                    
for page in range(10):  #10페이지까지 작동
    for i in range(12):  # 세로-12줄(13줄이 있긴 한데 거기는 들쭉날쭉이라서 일단 뺌)
        for j in range(4):  # 가로 4개씩 있음
            print("{}번째 유물 이미지를 다운받는 중입니다. ".format(page*(50)+i*4+j+1))
            print("멈추려면 0.5초 안에 F4를 누르세요!")
            sleep(0.5)
            if keyboard.is_pressed('f4'): break  # 반복 종료

            pag.click(699 + (300 * j), 844)
            sleep(1)  # 로딩될 동안 1초 기다리기
            fast_download()
            pag.click(20, 50)  # 뒤로 가기
            sleep(1)  # 로딩될 동안 1초 기다리기

            # 마우스를 적절한 위치에 가져다두기(뒤로 가기 해서 이상한 위치로 갈 경우를 대비)
            if 1 < i:
                pag.click(1911, 124)
                pag.click(clicks=5)
                pag.moveTo(1911, 193)
                pag.dragTo(1911, 193 + 54 * i, 2, button='left')
        pag.click(1911, 193 + 54 * i)
        pag.dragRel(0, 54, 2, button='left')  # 스크롤 내리기
   
    #13번째 줄의 경우
    screen3 = ImageGrab.grab()
    k_cnt=0
    for k in range(4):
        if screen.getpixel((,))==(0,128,128):
            k_cnt=k_cnt+1
            print("{}번째 유물 이미지를 다운받는 중입니다." format(page*50+i*4+j+1+k_cnt))
            
            pag.click(699 + (300 * j), 844)
            sleep(1)  # 로딩될 동안 1초 기다리기
            fast_download()
            pag.click(20, 50)  # 뒤로 가기
            sleep(1)  # 로딩될 동안 1초 기다리기

            # 마우스를 적절한 위치에 가져다두기(뒤로 가기 해서 이상한 위치로 갈 경우를 대비)
            if 1 < i:import pyautogui as pag
import keyboard
from time import sleep
from PIL import ImageGrab


def fast_download():
    # 이미지 다운로드를 찾아서 클릭
    y_start = 500  # 체크 시작 위치(y좌표)
    y_end = 921  # 얼만큼 체크할지

    red, green, blue = 62, 64, 74  # '이미지 다운로드'버튼의 색깔
    red1, green1, blue1 = 0, 128, 128

    screen = ImageGrab.grab()

    for y in range(y_end, y_start, -1):
        a, b, c = screen.getpixel((1100, y))
        if (a, b, c) == (red1, green1, blue1):  # 전체 다운로드가 있는 경우(이미지 복수일 때)
            pag.click(1100, y)
            # 이미지 다운로드 팝업창에서 클릭하는 과정
            screen2 = ImageGrab.grab()
            for m in range(810, 933):
                a1, b1, c1 = screen2.getpixel((777, m))
                if (a1, b1, c1) == (0, 128, 128):
                    pag.click(777, m - 568)
                    pag.click(777, m - 499)
                    pag.click(777, m + 13)
                    sleep(0.5)
                    pag.click(1032, m + 13)
                    return 0
        elif (a, b, c) == (red, green, blue):  # 전체 이미지가 단수일 때
            pag.click(1100, y)
            # 이미지 다운로드 팝업창에서 클릭하는 과정
            screen2 = ImageGrab.grab()
            for m in range(810, 933):
                a1, b1, c1 = screen2.getpixel((777, m))
                if (a1, b1, c1) == (0, 128, 128):
                    pag.click(777, m - 578)
                    pag.click(777, m - 480)
                    pag.click(777, m + 13)
                    sleep(0.5)
                    pag.click(1032, m + 13)
                    return 0


for page in range(10):  # 10페이지까지 작동
    for i in range(12):  # 세로-12줄(13줄이 있긴 한데 거기는 들쭉날쭉이라서 일단 뺌)
        for j in range(4):  # 가로 4개씩 있음
            print("{}번째 유물 이미지를 다운받는 중입니다. ".format(page *50 + i * 4 + j + 1))
            print("멈추려면 0.5초 안에 F4를 누르세요!")
            sleep(0.5)
            if keyboard.is_pressed('f4'): break  # 반복 종료

            pag.click(699 + (300 * j), 844)
            sleep(1)  # 로딩될 동안 1초 기다리기
            fast_download()
            pag.click(20, 50)  # 뒤로 가기
            sleep(1)  # 로딩될 동안 1초 기다리기

            # 마우스를 적절한 위치에 가져다두기(뒤로 가기 해서 이상한 위치로 갈 경우를 대비)
            if 1 < i:
                pag.click(1911, 124)
                pag.click(clicks=5)
                pag.moveTo(1911, 193)
                pag.dragTo(1911, 193 + 54 * i, 2, button='left')

            pag.click(1911, 193 + 54 * i)
            pag.dragRel(0, 54, 2, button='left')  # 스크롤 내리기

    # 마지막 줄의 경우
    screen3 = ImageGrab.grab()
    k_cnt = 0
    for k in range(4):
        if screen3.getpixel((,)) == (0, 128, 128):
            k_cnt = k_cnt + 1
            print("{}번째 유물 이미지를 다운받는 중입니다."
            format(page * 50 + i * 4 + j + 1 + k_cnt))

            pag.click(699 + (300 * j), 844)
            sleep(1)  # 로딩될 동안 1초 기다리기
            fast_download()
            pag.click(20, 50)  # 뒤로 가기
            sleep(1)  # 로딩될 동안 1초 기다리기

            # 마우스를 적절한 위치에 가져다두기(뒤로 가기 해서 이상한 위치로 갈 경우를 대비)
            if 1 < i:
                pag.click(1911, 124)
                pag.click(clicks=5)
                pag.moveTo(1911, 193)
                pag.dragTo(1911, 193 + 54 * i, 2, button='left')
            pag.click(1911, 193 + 54 * i)
            pag.dragRel(0, 54, 2, button='left')  # 스크롤 내리기
    # 페이지 넘기기
    pag.moveTo(1911, 1016)
    pag.click(clicks=3)  # 맨 아래로 가게 함
    sleep(1)
    pag.click(931 + 38 * page, 778)
    sleep(4)




                pag.click(1911, 124)
                pag.click(clicks=5)
                pag.moveTo(1911, 193)
                pag.dragTo(1911, 193 + 54 * i, 2, button='left')
   

    #페이지 넘기기
    pag.moveTo(1911,1016)
    pag.click(clicks=3)  #맨 아래로 가게 함
    sleep(1)
    pag.click(931+38*page,778)
    sleep(4)




